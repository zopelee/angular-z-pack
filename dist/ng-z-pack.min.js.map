{"version":3,"sources":["z_common_lib.js","z_i18n_lib.js","z_nocache_lib.js"],"names":["angular","module","config","$httpProvider","defaults","transformRequest","data","undefined","String","str","p","push","encodeURIComponent","join","headers","post","put","common","run","$rootScope","$window","$on","evt","absNewUrl","absOldUrl","scrollTo","$translateProvider","$translatePartialLoaderProvider","addPart","useLoader","urlTemplate","preferredLanguage","useSanitizeValueStrategy","$routeParams","$translate","$cookies","refresh","locale","lang","putObject","use","getObject","get"],"mappings":"AAAAA,QAAAC,OAAA,iBAEAD,QAAAC,OAAA,cAAAC,OAAA,SAAAC,GACAA,EAAAC,SAAAC,iBAAA,SAAAC,GACA,GAAAC,SAAAD,GAAAA,YAAAE,QACA,MAAAF,EAEA,IAAAG,KACA,KAAA,GAAAC,KAAAJ,GACAG,EAAAE,KAAAC,mBAAAF,GAAA,IAAAE,mBAAAN,EAAAI,IACA,OAAAD,GAAAI,KAAA,MAGAV,EAAAC,SAAAU,QAAAC,KAAA,gBAAA,oCACAZ,EAAAC,SAAAU,QAAAE,IAAA,gBAAA,oCACAb,EAAAC,SAAAU,QAAAG,OAAA,oBAAA,mBAGAjB,QAAAC,OAAA,cAAAiB,IAAA,SAAAC,EAAAC,GACAD,EAAAE,IAAA,sBAAA,SAAAC,EAAAC,EAAAC,GACAJ,EAAAK,SAAA,EAAA,OCpBAzB,QAAAC,OAAA,YAAA,UAAA,yBAAA,YAAA,eAEAD,QAAAC,OAAA,YAAAC,OAAA,SAAAwB,EAAAC,GACAA,EAAAC,QAAA,WACAF,EAAAG,UAAA,2BACAC,YAAA,4BAEAJ,EAAAK,kBAAA,MACAL,EAAAM,yBAAA,wBAGAhC,QAAAC,OAAA,YAAAiB,IAAA,SAAAC,EAAAc,EAAAC,EAAAC,GACAhB,EAAAE,IAAA,0CAAA,WACAa,EAAAE,YAEAjB,EAAAE,IAAA,sBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAa,GAAAJ,EAAAK,IACAD,IACAF,EAAAI,UAAA,SAAAF,GAEAH,EAAAM,IAAAH,GAAAF,EAAAM,UAAA,WAAA,UCpBAzC,QAAAC,OAAA,kBAEAD,QAAAC,OAAA,eAAAC,OAAA,SAAAC,GAEAA,EAAAC,SAAAU,QAAA4B,MACAvC,EAAAC,SAAAU,QAAA4B,QAOAvC,EAAAC,SAAAU,QAAA4B,IAAA,qBAAA,gCAEAvC,EAAAC,SAAAU,QAAA4B,IAAA,iBAAA,WACAvC,EAAAC,SAAAU,QAAA4B,IAAA,OAAA","file":"ng-z-pack.min.js","sourcesContent":["angular.module('zCommonLib', []);\n\nangular.module('zCommonLib').config(function ($httpProvider) {\n  $httpProvider.defaults.transformRequest = function (data) {\n    if (data === undefined || data instanceof String) {\n      return data;\n    } else {\n      var str = [];\n      for (var p in data)\n        str.push(encodeURIComponent(p) + \"=\" + encodeURIComponent(data[p]));\n      return str.join(\"&\");\n    }\n  };\n  $httpProvider.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n  $httpProvider.defaults.headers.put['Content-Type'] = 'application/x-www-form-urlencoded';\n  $httpProvider.defaults.headers.common[\"X-Requested-With\"] = \"XMLHttpRequest\";\n});\n\nangular.module('zCommonLib').run(function ($rootScope, $window) {\n  $rootScope.$on('$routeChangeSuccess', function (evt, absNewUrl, absOldUrl) {\n    $window.scrollTo(0, 0); //scroll to top of page after each route change\n  });\n});","angular.module('zI18nLib', ['ngRoute', 'pascalprecht.translate', 'ngCookies', 'ngSanitize']);\n\nangular.module('zI18nLib').config(function ($translateProvider, $translatePartialLoaderProvider) {\n  $translatePartialLoaderProvider.addPart('general');\n  $translateProvider.useLoader('$translatePartialLoader', {\n    urlTemplate: 'i18n/{part}/{lang}.json'\n  });\n  $translateProvider.preferredLanguage('en');\n  $translateProvider.useSanitizeValueStrategy('sanitizeParameters');\n});\n\nangular.module('zI18nLib').run(function ($rootScope, $routeParams, $translate, $cookies) {\n  $rootScope.$on('$translatePartialLoaderStructureChanged', function () {\n    $translate.refresh();\n  });\n  $rootScope.$on('$routeChangeSuccess', function (evt, absNewUrl, absOldUrl) {\n    var locale = $routeParams.lang;\n    if (locale) {\n      $cookies.putObject('locale', locale);\n    }\n    $translate.use(locale || $cookies.getObject('locale') || 'en');\n  });\n});","angular.module('zNocacheLib', []);\n\nangular.module('zNocacheLib').config(function ($httpProvider) {\n  //initialize get if not there\n  if (!$httpProvider.defaults.headers.get) {\n    $httpProvider.defaults.headers.get = {};\n  }\n\n  // Answer edited to include suggestions from comments\n  // because previous version of code introduced browser-related errors\n\n  //disable IE ajax request caching\n  $httpProvider.defaults.headers.get['If-Modified-Since'] = 'Mon, 26 Jul 1997 05:00:00 GMT';\n  // extra\n  $httpProvider.defaults.headers.get['Cache-Control'] = 'no-cache';\n  $httpProvider.defaults.headers.get['Pragma'] = 'no-cache';\n});\n"],"sourceRoot":"/source/"}